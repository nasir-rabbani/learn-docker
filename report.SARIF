{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "terrascan",
          "informationUri": "https://github.com/accurics/terrascan",
          "rules": [
            {
              "id": "AC-K8-NS-IN-H-0020",
              "name": "noHttps",
              "shortDescription": {
                "text": "TLS disabled can affect the confidentiality of the data in transit"
              },
              "properties": {
                "category": "Infrastructure Security",
                "severity": "HIGH"
              }
            },
            {
              "id": "AC-K8-OE-PO-M-0166",
              "name": "otherNamespace",
              "shortDescription": {
                "text": "Default Namespace Should Not be Used"
              },
              "properties": {
                "category": "Security Best Practices",
                "severity": "MEDIUM"
              }
            },
            {
              "id": "AC-K8-OE-NS-L-0128",
              "name": "noOwnerLabel",
              "shortDescription": {
                "text": "No owner for namespace affects the operations"
              },
              "properties": {
                "category": "Security Best Practices",
                "severity": "LOW"
              }
            },
            {
              "id": "AC-K8-OE-PO-L-0129",
              "name": "nolivenessProbe",
              "shortDescription": {
                "text": "No liveness probe will ensure there is no recovery in case of unexpected errors"
              },
              "properties": {
                "category": "Security Best Practices",
                "severity": "LOW"
              }
            },
            {
              "id": "accurics.kubernetes.IAM.109",
              "name": "containerResourcesNotDefined",
              "shortDescription": {
                "text": "Container does not have resource limitations defined"
              },
              "properties": {
                "category": "Identity and Access Management",
                "severity": "MEDIUM"
              }
            },
            {
              "id": "accurics.kubernetes.OPS.461",
              "name": "defaultNamespaceUsed2",
              "shortDescription": {
                "text": "The default namespace should not be used"
              },
              "properties": {
                "category": "Operational Efficiency",
                "severity": "LOW"
              }
            },
            {
              "id": "AC-K8-OE-PK-M-0156",
              "name": "CpulimitsCheck",
              "shortDescription": {
                "text": "CPU Limits Not Set in config file."
              },
              "properties": {
                "category": "Security Best Practices",
                "severity": "Medium"
              }
            },
            {
              "id": "AC-K8-IA-PO-M-0141",
              "name": "secCompProfile",
              "shortDescription": {
                "text": "Default seccomp profile not enabled will make the container to make non-essential system calls"
              },
              "properties": {
                "category": "Identity and Access Management",
                "severity": "MEDIUM"
              }
            },
            {
              "id": "accurics.kubernetes.OPS.460",
              "name": "defaultNamespaceUsed",
              "shortDescription": {
                "text": "The default namespace should not be used"
              },
              "properties": {
                "category": "Operational Efficiency",
                "severity": "LOW"
              }
            },
            {
              "id": "AC-K8-OE-PO-L-0134",
              "name": "imageWithLatestTag",
              "shortDescription": {
                "text": "No tag or container image with :Latest tag makes difficult to rollback and track"
              },
              "properties": {
                "category": "Security Best Practices",
                "severity": "LOW"
              }
            },
            {
              "id": "AC-K8-NS-PO-H-0117",
              "name": "secretsAsEnvVariables",
              "shortDescription": {
                "text": "Prefer using secrets as files over secrets as environment variables"
              },
              "properties": {
                "category": "Infrastructure Security",
                "severity": "HIGH"
              }
            },
            {
              "id": "AC-K8-OE-PK-M-0155",
              "name": "CpuRequestsCheck",
              "shortDescription": {
                "text": "CPU Request Not Set in config file."
              },
              "properties": {
                "category": "Security Best Practices",
                "severity": "Medium"
              }
            },
            {
              "id": "AC-K8-OE-PK-M-0157",
              "name": "MemoryRequestsCheck",
              "shortDescription": {
                "text": "Memory Request Not Set in config file."
              },
              "properties": {
                "category": "Security Best Practices",
                "severity": "Medium"
              }
            },
            {
              "id": "AC-K8-NS-PO-M-0122",
              "name": "securityContextUsed",
              "shortDescription": {
                "text": "Apply Security Context to Your Pods and Containers"
              },
              "properties": {
                "category": "Infrastructure Security",
                "severity": "MEDIUM"
              }
            },
            {
              "id": "AC-K8-OE-PK-M-0158",
              "name": "MemorylimitsCheck",
              "shortDescription": {
                "text": "Memory Limits Not Set in config file."
              },
              "properties": {
                "category": "Security Best Practices",
                "severity": "Medium"
              }
            },
            {
              "id": "AC-K8-IA-PO-M-0135",
              "name": "appArmorProfile",
              "shortDescription": {
                "text": "AppArmor profile not set to default or custom profile will make the container vulnerable to kernel level threats"
              },
              "properties": {
                "category": "Identity and Access Management",
                "severity": "MEDIUM"
              }
            },
            {
              "id": "AC-K8-NS-PO-M-0133",
              "name": "imageWithoutDigest",
              "shortDescription": {
                "text": "Image without digest affects the integrity principle of image security"
              },
              "properties": {
                "category": "Infrastructure Security",
                "severity": "MEDIUM"
              }
            },
            {
              "id": "AC-K8-OE-PO-L-0130",
              "name": "noReadinessProbe",
              "shortDescription": {
                "text": "No readiness probe will affect automatic recovery in case of unexpected errors"
              },
              "properties": {
                "category": "Security Best Practices",
                "severity": "LOW"
              }
            },
            {
              "id": "accurics.kubernetes.OPS.462",
              "name": "defaultNamespaceUsed4",
              "shortDescription": {
                "text": "The default namespace should not be used"
              },
              "properties": {
                "category": "Operational Efficiency",
                "severity": "LOW"
              }
            },
            {
              "id": "AC-K8-NS-SE-M-0188",
              "name": "ensurePrivateIP",
              "shortDescription": {
                "text": "Vulnerable to CVE-2020-8554"
              },
              "properties": {
                "category": "Network Security",
                "severity": "MEDIUM"
              }
            },
            {
              "id": "accurics.kubernetes.IAM.107",
              "name": "containerResourcesNotDefined",
              "shortDescription": {
                "text": "Container does not have resource limitations defined"
              },
              "properties": {
                "category": "Identity and Access Management",
                "severity": "MEDIUM"
              }
            },
            {
              "id": "AC-K8-NS-PO-M-0182",
              "name": "containersAsHighUID",
              "shortDescription": {
                "text": "Containers Should Run as a High UID to Avoid Host Conflict"
              },
              "properties": {
                "category": "Infrastructure Security",
                "severity": "MEDIUM"
              }
            },
            {
              "id": "accurics.kubernetes.IAM.115",
              "name": "containerResourcesNotDefined",
              "shortDescription": {
                "text": "Container does not have resource limitations defined"
              },
              "properties": {
                "category": "Identity and Access Management",
                "severity": "MEDIUM"
              }
            },
            {
              "id": "AC-K8-IA-PO-H-0168",
              "name": "runAsNonRootCheck",
              "shortDescription": {
                "text": "Minimize Admission of Root Containers"
              },
              "properties": {
                "category": "Identity and Access Management",
                "severity": "HIGH"
              }
            },
            {
              "id": "AC-K8-IA-PO-M-0140",
              "name": "readOnlyFileSystem",
              "shortDescription": {
                "text": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
              },
              "properties": {
                "category": "Identity and Access Management",
                "severity": "MEDIUM"
              }
            },
            {
              "id": "AC-K8-CA-PO-H-0165",
              "name": "privilegeEscalationCheck",
              "shortDescription": {
                "text": "Containers Should Not Run with AllowPrivilegeEscalation"
              },
              "properties": {
                "category": "Compliance Validation",
                "severity": "HIGH"
              }
            },
            {
              "id": "AC_AWS_026",
              "name": "ecrNotEncrypted",
              "shortDescription": {
                "text": "Ensure ECR repository is encrypted at rest"
              },
              "properties": {
                "category": "Data Protection",
                "severity": "MEDIUM"
              }
            },
            {
              "id": "AWS.VPC.Logging.Medium.0470",
              "name": "vpcFlowLogsNotEnabled",
              "shortDescription": {
                "text": "Ensure VPC flow logging is enabled in all VPCs"
              },
              "properties": {
                "category": "Logging and Monitoring",
                "severity": "MEDIUM"
              }
            },
            {
              "id": "AC-AW-IS-CD-M-1186",
              "name": "noWafEnabled",
              "shortDescription": {
                "text": "Ensure that cloud-front has web application firewall enabled"
              },
              "properties": {
                "category": "Infrastructure Security",
                "severity": "Medium"
              }
            },
            {
              "id": "AC-AW-CA-LC-H-0439",
              "name": "imdsv1LaunchConfig",
              "shortDescription": {
                "text": "Launch configuration uses IMDSv1 which vulnerable to SSRF"
              },
              "properties": {
                "category": "Configuration and Vulnerability Analysis",
                "severity": "HIGH"
              }
            },
            {
              "id": "AWS.SQS.NetworkSecurity.High.0569",
              "name": "sqsQueueExposed",
              "shortDescription": {
                "text": "Identify any publicly accessible SQS queues available in your AWS account and update their permissions in order to protect against unauthorized users."
              },
              "properties": {
                "category": "Security Best Practices",
                "severity": "HIGH"
              }
            },
            {
              "id": "AWS.CloudFront.EncryptionandKeyManagement.High.0407",
              "name": "cloudfrontNoHTTPSTraffic",
              "shortDescription": {
                "text": "Use encrypted connection between CloudFront and origin server"
              },
              "properties": {
                "category": "Data Protection",
                "severity": "HIGH"
              }
            },
            {
              "id": "AWS.EcsCluster.NetworkSecurity.High.0104",
              "name": "instanceNotInVpc",
              "shortDescription": {
                "text": "Like any other EC2 instance it is recommended to place ECS instance within a VPC. AWS VPCs provides the controls to facilitate a formal process for approving and testing all network connections and changes to the firewall and router configurations"
              },
              "properties": {
                "category": "Infrastructure Security",
                "severity": "HIGH"
              }
            },
            {
              "id": "AWS.EC2.Encryption\u0026KeyManagement.Medium.0688",
              "name": "amiNotEncrypted",
              "shortDescription": {
                "text": "Enable AWS AMI Encryption"
              },
              "properties": {
                "category": "Infrastructure Security",
                "severity": "MEDIUM"
              }
            },
            {
              "id": "AWS.ALB.NetworkPortsSecurity.High.0194",
              "name": "port22AlbNetworkPortSecurityPublicScope",
              "shortDescription": {
                "text": "'SSH' (TCP:22) is accessible by a CIDR block range"
              },
              "properties": {
                "category": "Infrastructure Security",
                "severity": "HIGH"
              }
            },
            {
              "id": "AC_AWS_076",
              "name": "dbInstanceLoggingDisabled",
              "shortDescription": {
                "text": "Ensure AWS RDS instances have logging enabled."
              },
              "properties": {
                "category": "Logging and Monitoring",
                "severity": "MEDIUM"
              }
            },
            {
              "id": "AWS.GuardDuty Enabled.Security.Medium.0575",
              "name": "gaurdDutyDisabled",
              "shortDescription": {
                "text": "Ensure that Amazon GuardDuty service is currently enabled in all regions in order to protect your AWS environment and infrastructure (AWS accounts and resources, IAM credentials, guest operating systems, applications, etc) against security threats. AWS GuardDuty is a managed threat detection service that continuously monitors your VPC flow logs, AWS CloudTrail event logs and DNS logs for malicious or unauthorized behavior. The service monitors for activity such as unusual API calls, potentially compromised EC2 instances or potentially unauthorized deployments that indicate a possible AWS account compromise. AWS GuardDuty operates entirely on Amazon Web Services infrastructure and does not affect the performance or reliability of your applications. The service does not require any software agents, sensors or network appliances."
              },
              "properties": {
                "category": "Logging and Monitoring",
                "severity": "MEDIUM"
              }
            },
            {
              "id": "AWS.CloudFront.Logging.Medium.0567",
              "name": "cloudfrontNoLogging",
              "shortDescription": {
                "text": "Ensure that your AWS Cloudfront distributions have the Logging feature enabled in order to track all viewer requests for the content delivered through the Content Delivery Network (CDN)."
              },
              "properties": {
                "category": "Logging and Monitoring",
                "severity": "MEDIUM"
              }
            },
            {
              "id": "AWS.CloudTrail.Logging.High.0399",
              "name": "cloudTrailLogNotEncrypted",
              "shortDescription": {
                "text": "Ensure CloudTrail logs are encrypted using KMS"
              },
              "properties": {
                "category": "Logging and Monitoring",
                "severity": "HIGH"
              }
            },
            {
              "id": "AWS.RDS.DataSecurity.High.0414",
              "name": "rdsHasStorageEncrypted",
              "shortDescription": {
                "text": "Ensure that your RDS database instances encrypt the underlying storage. Encrypted RDS instances use the industry standard AES-256 encryption algorithm to encrypt data on the server that hosts RDS DB instances. After data is encrypted, RDS handles authentication of access and descryption of data transparently with minimal impact on performance."
              },
              "properties": {
                "category": "Data Protection",
                "severity": "HIGH"
              }
            },
            {
              "id": "AWS.RDS.DataSecurity.High.0577",
              "name": "rdsIamAuthEnabled",
              "shortDescription": {
                "text": "Ensure that your RDS database has IAM Authentication enabled."
              },
              "properties": {
                "category": "Data Protection",
                "severity": "HIGH"
              }
            },
            {
              "id": "AWS.ElastiCache.DataSecurity.High.0424",
              "name": "noMemcachedInElastiCache",
              "shortDescription": {
                "text": "ElastiCache for Memcached is not in use in AWS PCI DSS environments"
              },
              "properties": {
                "category": "Compliance Validation",
                "severity": "HIGH"
              }
            },
            {
              "id": "AWS.SecurityGroup.NetworkPortsSecurity.Low.0560",
              "name": "port22OpenToInternet",
              "shortDescription": {
                "text": "ssh port open to internet"
              },
              "properties": {
                "category": "Infrastructure Security",
                "severity": "HIGH"
              }
            },
            {
              "id": "AC_AWS_012",
              "name": "kmsKeyRotationDisabled",
              "shortDescription": {
                "text": "Ensure rotation for customer created CMKs is enabled"
              },
              "properties": {
                "category": "Security Best Practices",
                "severity": "MEDIUM"
              }
            },
            {
              "id": "AC-AW-IS-IN-M-0144",
              "name": "instanceWithNoVpc",
              "shortDescription": {
                "text": "Ensure that your AWS application is not deployed within the default Virtual Private Cloud in order to follow security best practices"
              },
              "properties": {
                "category": "Infrastructure Security",
                "severity": "MEDIUM"
              }
            },
            {
              "id": "AWS.S3Bucket.IAM.High.0370",
              "name": "s3Versioning",
              "shortDescription": {
                "text": "Enabling S3 versioning will enable easy recovery from both unintended user actions, like deletes and overwrites"
              },
              "properties": {
                "category": "Resilience",
                "severity": "HIGH"
              }
            },
            {
              "id": "AWS.ELB.EncryptionandKeyManagement.High.0403",
              "name": "elbWeakCipher",
              "shortDescription": {
                "text": "Remove insecure ciphers for your ELB Predefined or Custom Security Policy, to reduce the risk of the SSL connection between the client and the load balancer being exploited."
              },
              "properties": {
                "category": "Infrastructure Security",
                "severity": "HIGH"
              }
            },
            {
              "id": "AWS.RDS.NS.High.0101",
              "name": "rdsPubliclyAccessible",
              "shortDescription": {
                "text": "RDS Instance publicly_accessible flag is true"
              },
              "properties": {
                "category": "Infrastructure Security",
                "severity": "HIGH"
              }
            },
            {
              "id": "AC_AWS_071",
              "name": "eksControlPlaneLoggingDisabled",
              "shortDescription": {
                "text": "Ensure EKS clusters have control plane logging enabled."
              },
              "properties": {
                "category": "Logging and Monitoring",
                "severity": "MEDIUM"
              }
            },
            {
              "id": "AWS.SecurityGroup.NetworkPortsSecurity.Low.0561",
              "name": "port80OpenToInternet",
              "shortDescription": {
                "text": "http port open to internet"
              },
              "properties": {
                "category": "Infrastructure Security",
                "severity": "HIGH"
              }
            },
            {
              "id": "AWS.ECR.DataSecurity.High.0579",
              "name": "ecrRepoIsPublic",
              "shortDescription": {
                "text": "Identify any exposed Amazon ECR image repositories available within your AWS account and update their permissions in order to protect against unauthorized access. Amazon Elastic Container Registry (ECR) is a managed Docker registry service that makes it easy for DevOps teams to store, manage and deploy Docker container images. An ECR repository is a collection of Docker images available on AWS cloud."
              },
              "properties": {
                "category": "Identity and Access Management",
                "severity": "HIGH"
              }
            },
            {
              "id": "AWS.S3Bucket.EncryptionandKeyManagement.High.0405",
              "name": "s3BucketSseRulesWithKmsNull",
              "shortDescription": {
                "text": "Ensure that S3 Buckets have server side encryption at rest enabled with KMS key to protect sensitive data."
              },
              "properties": {
                "category": "Data Protection",
                "severity": "HIGH"
              }
            },
            {
              "id": "AWS.RDS.DS.High.1041",
              "name": "rdsAutoMinorVersionUpgradeEnabled",
              "shortDescription": {
                "text": "RDS Instance Auto Minor Version Upgrade flag disabled"
              },
              "properties": {
                "category": "Data Protection",
                "severity": "HIGH"
              }
            },
            {
              "id": "AWS.ECR.DataSecurity.High.0578",
              "name": "scanOnPushDisabled",
              "shortDescription": {
                "text": "Unscanned images may contain vulnerabilities"
              },
              "properties": {
                "category": "Configuration and Vulnerability Analysis",
                "severity": "MEDIUM"
              }
            },
            {
              "id": "AWS.S3Bucket.DS.High.1043",
              "name": "s3EnforceUserACL",
              "shortDescription": {
                "text": "S3 bucket Access is allowed to all AWS Account Users."
              },
              "properties": {
                "category": "Identity and Access Management",
                "severity": "HIGH"
              }
            },
            {
              "id": "AC_AWS_078",
              "name": "s3BucketAccessLoggingDisabled",
              "shortDescription": {
                "text": "Ensure S3 buckets have access logging enabled."
              },
              "properties": {
                "category": "Logging and Monitoring",
                "severity": "MEDIUM"
              }
            },
            {
              "id": "AC_AWS_015",
              "name": "noSgDescription",
              "shortDescription": {
                "text": "Ensure every security group should have a description to ease the process of Auditing"
              },
              "properties": {
                "category": "Security Best Practices",
                "severity": "LOW"
              }
            },
            {
              "id": "AC-AWS-NS-IN-M-1172",
              "name": "ec2UsingIMDSv1",
              "shortDescription": {
                "text": "EC2 instances should disable IMDS or require IMDSv2 as this can be related to the weaponization phase of kill chain"
              },
              "properties": {
                "category": "Infrastructure Security",
                "severity": "MEDIUM"
              }
            },
            {
              "id": "AC_AWS_070",
              "name": "detailedMonitoringEnabledInstance",
              "shortDescription": {
                "text": "Ensure that detailed monitoring is enabled for EC2 instances."
              },
              "properties": {
                "category": "Logging and Monitoring",
                "severity": "HIGH"
              }
            },
            {
              "id": "AC_AWS_067",
              "name": "cloudTrailLogValidationDisabled",
              "shortDescription": {
                "text": "Ensure CloudTrail has log file validation enabled."
              },
              "properties": {
                "category": "Logging and Monitoring",
                "severity": "MEDIUM"
              }
            },
            {
              "id": "accurics.azure.NS.161",
              "name": "reme_noSecurityGroupAssociated",
              "shortDescription": {
                "text": "Ensure that Azure Virtual Network subnet is configured with a Network Security Group"
              },
              "properties": {
                "category": "Infrastructure Security",
                "severity": "MEDIUM"
              }
            },
            {
              "id": "accurics.azure.NS.272",
              "name": "reme_resourceGroupLock",
              "shortDescription": {
                "text": "Ensure that Azure Resource Group has resource lock enabled"
              },
              "properties": {
                "category": "Identity and Access Management",
                "severity": "LOW"
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "AC-K8-NS-IN-H-0020",
          "level": "error",
          "message": {
            "text": "TLS disabled can affect the confidentiality of the data in transit",
            "markdown": "TLS disabled can affect the confidentiality of the data in transit"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "a-sub-chart/templates/ingress.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 5
                }
              },
              "logicalLocations": [
                {
                  "name": "a-sub-chart",
                  "kind": "kubernetes_ingress"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-IN-H-0020",
          "level": "error",
          "message": {
            "markdown": "TLS disabled can affect the confidentiality of the data in transit"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/k8s/kubernetes_ingress_violation/config.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "ingress-demo-disallowed",
                  "kind": "kubernetes_ingress"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-M-0166",
          "level": "warning",
          "message": {
            "markdown": "Default Namespace Should Not be Used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "terrascan/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-M-0166",
          "level": "warning",
          "message": {
            "markdown": "Default Namespace Should Not be Used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/base/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-M-0166",
          "level": "warning",
          "message": {
            "markdown": "Default Namespace Should Not be Used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/webhook/deployment-env.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-M-0166",
          "level": "warning",
          "message": {
            "markdown": "Default Namespace Should Not be Used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-tls/deployment-certs.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-M-0166",
          "level": "warning",
          "message": {
            "markdown": "Default Namespace Should Not be Used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-remote-repo-scan/deployment-ssh-config.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-NS-L-0128",
          "level": "note",
          "message": {
            "markdown": "No owner for namespace affects the operations"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/config-only.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "accurics",
                  "kind": "kubernetes_namespace"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-NS-L-0128",
          "level": "note",
          "message": {
            "markdown": "No owner for namespace affects the operations"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_namespace.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "mynamespace",
                  "kind": "kubernetes_namespace"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-NS-L-0128",
          "level": "note",
          "message": {
            "markdown": "No owner for namespace affects the operations"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_namespace_bad_metadata_name.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "false",
                  "kind": "kubernetes_namespace"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-NS-L-0128",
          "level": "note",
          "message": {
            "markdown": "No owner for namespace affects the operations"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/resource_skipping/kubernetes/config.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "production",
                  "kind": "kubernetes_namespace"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/json-extension/pod.json"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "simple",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/pod.json"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "simple",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-with-multiple-documents/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/multibases/base/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-extension2/test_pod.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/utils/testdata/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_namespace.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/multibases/zero-violation-base/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod_skip_rules.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod-skip-rules",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/validatingwebhook/test-data/yamls/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "terrascan/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/base/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/webhook/deployment-env.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-tls/deployment-certs.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-remote-repo-scan/deployment-ssh-config.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/erroneous-deployment/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/simple-deployment/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/kustomize-test/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/kustomize-file-empty/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/no-kustomizefile/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-with-multiple-documents/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-extension2/test_pod.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_kind.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_kind.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "-1",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_namespace.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "true",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0129",
          "level": "note",
          "message": {
            "markdown": "No liveness probe will ensure there is no recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod_skip_rules.yaml"
                },
                "contextRegion": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment-skip-rules",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.109",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/json-extension/pod.json"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "simple",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.109",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/pod.json"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "simple",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.109",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-with-multiple-documents/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.109",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/multibases/base/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.109",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-extension2/test_pod.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.109",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.109",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/utils/testdata/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.109",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.109",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.109",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_namespace.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.109",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.109",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.109",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.109",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod_skip_rules.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod-skip-rules",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.461",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "terrascan/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.461",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/base/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.461",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/webhook/deployment-env.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.461",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-tls/deployment-certs.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.461",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-remote-repo-scan/deployment-ssh-config.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.461",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.461",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.461",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.461",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.461",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "a-sub-chart/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "a-sub-chart",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.461",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/erroneous-deployment/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.461",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/simple-deployment/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.461",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/kustomize-test/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.461",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/kustomize-file-empty/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.461",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/no-kustomizefile/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.461",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-with-multiple-documents/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.461",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-extension2/test_pod.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.461",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.461",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_kind.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.461",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_kind.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.461",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.461",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.461",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.461",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "-1",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.461",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_namespace.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "true",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.461",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod_skip_rules.yaml"
                },
                "contextRegion": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment-skip-rules",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/json-extension/pod.json"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "simple",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/pod.json"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "simple",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-with-multiple-documents/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/multibases/base/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-extension2/test_pod.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/utils/testdata/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_namespace.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod_skip_rules.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod-skip-rules",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "terrascan/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/base/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/webhook/deployment-env.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-tls/deployment-certs.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-remote-repo-scan/deployment-ssh-config.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "a-sub-chart/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "a-sub-chart",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/erroneous-deployment/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/simple-deployment/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/kustomize-test/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/kustomize-file-empty/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/no-kustomizefile/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-with-multiple-documents/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-extension2/test_pod.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_kind.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_kind.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "-1",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_namespace.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "true",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0156",
          "level": "warning",
          "message": {
            "markdown": "CPU Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod_skip_rules.yaml"
                },
                "contextRegion": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment-skip-rules",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/json-extension/pod.json"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "simple",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/pod.json"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "simple",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-with-multiple-documents/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/multibases/base/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-extension2/test_pod.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/utils/testdata/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_namespace.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/multibases/zero-violation-base/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod_skip_rules.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod-skip-rules",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/validatingwebhook/test-data/yamls/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "terrascan/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/base/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/webhook/deployment-env.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-tls/deployment-certs.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-remote-repo-scan/deployment-ssh-config.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "a-sub-chart/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "a-sub-chart",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/simple-deployment/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/kustomize-test/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/kustomize-file-empty/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/no-kustomizefile/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/erroneous-deployment/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-with-multiple-documents/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-extension2/test_pod.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_kind.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_kind.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "-1",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_namespace.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "true",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0141",
          "level": "warning",
          "message": {
            "markdown": "Default seccomp profile not enabled will make the container to make non-essential system calls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod_skip_rules.yaml"
                },
                "contextRegion": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment-skip-rules",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.460",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/json-extension/pod.json"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "simple",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.460",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/pod.json"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "simple",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.460",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-with-multiple-documents/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.460",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/multibases/base/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.460",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-extension2/test_pod.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.460",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.460",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/utils/testdata/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.460",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.460",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.460",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_namespace.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.460",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.460",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.460",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.460",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod_skip_rules.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod-skip-rules",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.460",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/validatingwebhook/test-data/yamls/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-with-multiple-documents/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/multibases/base/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-extension2/test_pod.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/utils/testdata/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_namespace.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod_skip_rules.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod-skip-rules",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/validatingwebhook/test-data/yamls/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/erroneous-deployment/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-with-multiple-documents/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-extension2/test_pod.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_kind.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_kind.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "-1",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_namespace.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "true",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod_skip_rules.yaml"
                },
                "contextRegion": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment-skip-rules",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "integrations/argocd/examples/presynchook-webhook.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan-hook-",
                  "kind": "kubernetes_job"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "integrations/argocd/examples/presynchook.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan-hook-",
                  "kind": "kubernetes_job"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "terrascan/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/base/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/webhook/deployment-env.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-tls/deployment-certs.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0134",
          "level": "note",
          "message": {
            "markdown": "No tag or container image with :Latest tag makes difficult to rollback and track"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-remote-repo-scan/deployment-ssh-config.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-H-0117",
          "level": "error",
          "message": {
            "markdown": "Prefer using secrets as files over secrets as environment variables"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/simple-deployment/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-H-0117",
          "level": "error",
          "message": {
            "markdown": "Prefer using secrets as files over secrets as environment variables"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/kustomize-test/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-H-0117",
          "level": "error",
          "message": {
            "markdown": "Prefer using secrets as files over secrets as environment variables"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/kustomize-file-empty/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-H-0117",
          "level": "error",
          "message": {
            "markdown": "Prefer using secrets as files over secrets as environment variables"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/no-kustomizefile/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/json-extension/pod.json"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "simple",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/pod.json"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "simple",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-with-multiple-documents/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/multibases/base/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-extension2/test_pod.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/utils/testdata/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_namespace.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod_skip_rules.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod-skip-rules",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/validatingwebhook/test-data/yamls/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "terrascan/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/base/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/webhook/deployment-env.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-tls/deployment-certs.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-remote-repo-scan/deployment-ssh-config.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "a-sub-chart/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "a-sub-chart",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/erroneous-deployment/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/simple-deployment/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/kustomize-test/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/kustomize-file-empty/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/no-kustomizefile/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-with-multiple-documents/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-extension2/test_pod.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_kind.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_kind.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "-1",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_namespace.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "true",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0155",
          "level": "warning",
          "message": {
            "markdown": "CPU Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod_skip_rules.yaml"
                },
                "contextRegion": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment-skip-rules",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/json-extension/pod.json"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "simple",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/pod.json"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "simple",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-with-multiple-documents/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/multibases/base/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-extension2/test_pod.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/utils/testdata/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_namespace.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod_skip_rules.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod-skip-rules",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/validatingwebhook/test-data/yamls/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "terrascan/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/base/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/webhook/deployment-env.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-tls/deployment-certs.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-remote-repo-scan/deployment-ssh-config.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "a-sub-chart/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "a-sub-chart",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/erroneous-deployment/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/simple-deployment/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/kustomize-test/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/kustomize-file-empty/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/no-kustomizefile/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-with-multiple-documents/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-extension2/test_pod.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_kind.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_kind.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "-1",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_namespace.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "true",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0157",
          "level": "warning",
          "message": {
            "markdown": "Memory Request Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod_skip_rules.yaml"
                },
                "contextRegion": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment-skip-rules",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/json-extension/pod.json"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "simple",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/pod.json"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "simple",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/multibases/zero-violation-base/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-with-multiple-documents/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/multibases/base/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-extension2/test_pod.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/utils/testdata/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_namespace.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/validatingwebhook/test-data/yamls/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod_skip_rules.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod-skip-rules",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "terrascan/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/base/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/webhook/deployment-env.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-tls/deployment-certs.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-remote-repo-scan/deployment-ssh-config.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/erroneous-deployment/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/simple-deployment/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/kustomize-test/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/kustomize-file-empty/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/no-kustomizefile/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-with-multiple-documents/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-extension2/test_pod.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_kind.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_kind.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "-1",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_namespace.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "true",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0122",
          "level": "warning",
          "message": {
            "markdown": "Apply Security Context to Your Pods and Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod_skip_rules.yaml"
                },
                "contextRegion": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment-skip-rules",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/json-extension/pod.json"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "simple",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/pod.json"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "simple",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-with-multiple-documents/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/multibases/base/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-extension2/test_pod.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/utils/testdata/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_namespace.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod_skip_rules.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod-skip-rules",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "terrascan/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/base/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/webhook/deployment-env.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-tls/deployment-certs.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-remote-repo-scan/deployment-ssh-config.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "a-sub-chart/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "a-sub-chart",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/erroneous-deployment/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/simple-deployment/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/kustomize-test/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/kustomize-file-empty/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/no-kustomizefile/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-with-multiple-documents/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-extension2/test_pod.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_kind.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_kind.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "-1",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_namespace.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "true",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PK-M-0158",
          "level": "warning",
          "message": {
            "markdown": "Memory Limits Not Set in config file."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod_skip_rules.yaml"
                },
                "contextRegion": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment-skip-rules",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0135",
          "level": "warning",
          "message": {
            "markdown": "AppArmor profile not set to default or custom profile will make the container vulnerable to kernel level threats"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/json-extension/pod.json"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "simple",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0135",
          "level": "warning",
          "message": {
            "markdown": "AppArmor profile not set to default or custom profile will make the container vulnerable to kernel level threats"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/pod.json"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "simple",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0135",
          "level": "warning",
          "message": {
            "markdown": "AppArmor profile not set to default or custom profile will make the container vulnerable to kernel level threats"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-with-multiple-documents/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0135",
          "level": "warning",
          "message": {
            "markdown": "AppArmor profile not set to default or custom profile will make the container vulnerable to kernel level threats"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/multibases/base/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0135",
          "level": "warning",
          "message": {
            "markdown": "AppArmor profile not set to default or custom profile will make the container vulnerable to kernel level threats"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-extension2/test_pod.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0135",
          "level": "warning",
          "message": {
            "markdown": "AppArmor profile not set to default or custom profile will make the container vulnerable to kernel level threats"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0135",
          "level": "warning",
          "message": {
            "markdown": "AppArmor profile not set to default or custom profile will make the container vulnerable to kernel level threats"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/utils/testdata/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0135",
          "level": "warning",
          "message": {
            "markdown": "AppArmor profile not set to default or custom profile will make the container vulnerable to kernel level threats"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0135",
          "level": "warning",
          "message": {
            "markdown": "AppArmor profile not set to default or custom profile will make the container vulnerable to kernel level threats"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0135",
          "level": "warning",
          "message": {
            "markdown": "AppArmor profile not set to default or custom profile will make the container vulnerable to kernel level threats"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_namespace.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0135",
          "level": "warning",
          "message": {
            "markdown": "AppArmor profile not set to default or custom profile will make the container vulnerable to kernel level threats"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0135",
          "level": "warning",
          "message": {
            "markdown": "AppArmor profile not set to default or custom profile will make the container vulnerable to kernel level threats"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/multibases/zero-violation-base/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0135",
          "level": "warning",
          "message": {
            "markdown": "AppArmor profile not set to default or custom profile will make the container vulnerable to kernel level threats"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0135",
          "level": "warning",
          "message": {
            "markdown": "AppArmor profile not set to default or custom profile will make the container vulnerable to kernel level threats"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0135",
          "level": "warning",
          "message": {
            "markdown": "AppArmor profile not set to default or custom profile will make the container vulnerable to kernel level threats"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod_skip_rules.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod-skip-rules",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0135",
          "level": "warning",
          "message": {
            "markdown": "AppArmor profile not set to default or custom profile will make the container vulnerable to kernel level threats"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/validatingwebhook/test-data/yamls/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0135",
          "level": "warning",
          "message": {
            "markdown": "AppArmor profile not set to default or custom profile will make the container vulnerable to kernel level threats"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0135",
          "level": "warning",
          "message": {
            "markdown": "AppArmor profile not set to default or custom profile will make the container vulnerable to kernel level threats"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0135",
          "level": "warning",
          "message": {
            "markdown": "AppArmor profile not set to default or custom profile will make the container vulnerable to kernel level threats"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0135",
          "level": "warning",
          "message": {
            "markdown": "AppArmor profile not set to default or custom profile will make the container vulnerable to kernel level threats"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0135",
          "level": "warning",
          "message": {
            "markdown": "AppArmor profile not set to default or custom profile will make the container vulnerable to kernel level threats"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "terrascan/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0135",
          "level": "warning",
          "message": {
            "markdown": "AppArmor profile not set to default or custom profile will make the container vulnerable to kernel level threats"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/base/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0135",
          "level": "warning",
          "message": {
            "markdown": "AppArmor profile not set to default or custom profile will make the container vulnerable to kernel level threats"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/webhook/deployment-env.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0135",
          "level": "warning",
          "message": {
            "markdown": "AppArmor profile not set to default or custom profile will make the container vulnerable to kernel level threats"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-tls/deployment-certs.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0135",
          "level": "warning",
          "message": {
            "markdown": "AppArmor profile not set to default or custom profile will make the container vulnerable to kernel level threats"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-remote-repo-scan/deployment-ssh-config.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0135",
          "level": "warning",
          "message": {
            "markdown": "AppArmor profile not set to default or custom profile will make the container vulnerable to kernel level threats"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "a-sub-chart/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "a-sub-chart",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0135",
          "level": "warning",
          "message": {
            "markdown": "AppArmor profile not set to default or custom profile will make the container vulnerable to kernel level threats"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/simple-deployment/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0135",
          "level": "warning",
          "message": {
            "markdown": "AppArmor profile not set to default or custom profile will make the container vulnerable to kernel level threats"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/kustomize-test/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0135",
          "level": "warning",
          "message": {
            "markdown": "AppArmor profile not set to default or custom profile will make the container vulnerable to kernel level threats"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/kustomize-file-empty/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0135",
          "level": "warning",
          "message": {
            "markdown": "AppArmor profile not set to default or custom profile will make the container vulnerable to kernel level threats"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/no-kustomizefile/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/json-extension/pod.json"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "simple",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/pod.json"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "simple",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-with-multiple-documents/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/multibases/base/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-extension2/test_pod.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/utils/testdata/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_namespace.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/multibases/zero-violation-base/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod_skip_rules.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod-skip-rules",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/validatingwebhook/test-data/yamls/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "terrascan/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/base/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/webhook/deployment-env.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-tls/deployment-certs.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-remote-repo-scan/deployment-ssh-config.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "a-sub-chart/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "a-sub-chart",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/erroneous-deployment/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/simple-deployment/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/kustomize-test/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/kustomize-file-empty/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/no-kustomizefile/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-with-multiple-documents/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-extension2/test_pod.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_kind.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_kind.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "-1",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_namespace.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "true",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod_skip_rules.yaml"
                },
                "contextRegion": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment-skip-rules",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "integrations/argocd/examples/presynchook-webhook.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan-hook-",
                  "kind": "kubernetes_job"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0133",
          "level": "warning",
          "message": {
            "markdown": "Image without digest affects the integrity principle of image security"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "integrations/argocd/examples/presynchook.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan-hook-",
                  "kind": "kubernetes_job"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/json-extension/pod.json"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "simple",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/pod.json"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "simple",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-with-multiple-documents/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/multibases/base/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-extension2/test_pod.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/utils/testdata/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_namespace.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/multibases/zero-violation-base/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod_skip_rules.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod-skip-rules",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/validatingwebhook/test-data/yamls/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "terrascan/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/base/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/webhook/deployment-env.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-tls/deployment-certs.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-remote-repo-scan/deployment-ssh-config.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/erroneous-deployment/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/simple-deployment/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/kustomize-test/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/kustomize-file-empty/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/no-kustomizefile/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-with-multiple-documents/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-extension2/test_pod.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_kind.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_kind.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "-1",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_namespace.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "true",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-OE-PO-L-0130",
          "level": "note",
          "message": {
            "markdown": "No readiness probe will affect automatic recovery in case of unexpected errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod_skip_rules.yaml"
                },
                "contextRegion": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment-skip-rules",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.OPS.462",
          "level": "note",
          "message": {
            "markdown": "The default namespace should not be used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "integrations/argocd/examples/presynchook.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan-hook-",
                  "kind": "kubernetes_job"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-SE-M-0188",
          "level": "warning",
          "message": {
            "markdown": "Vulnerable to CVE-2020-8554"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/validatingwebhook/test-data/yamls/service.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "allowed-external-ip",
                  "kind": "kubernetes_service"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.107",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "terrascan/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.107",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/base/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.107",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/webhook/deployment-env.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.107",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-tls/deployment-certs.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.107",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-remote-repo-scan/deployment-ssh-config.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.107",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/erroneous-deployment/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.107",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/simple-deployment/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.107",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/kustomize-test/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.107",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/kustomize-file-empty/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.107",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/no-kustomizefile/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.107",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-with-multiple-documents/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.107",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-extension2/test_pod.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.107",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.107",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_kind.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.107",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_kind.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.107",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.107",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.107",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.107",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "-1",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.107",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_namespace.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "true",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.107",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod_skip_rules.yaml"
                },
                "contextRegion": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment-skip-rules",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0182",
          "level": "warning",
          "message": {
            "markdown": "Containers Should Run as a High UID to Avoid Host Conflict"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "integrations/argocd/examples/presynchook-webhook.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan-hook-",
                  "kind": "kubernetes_job"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-NS-PO-M-0182",
          "level": "warning",
          "message": {
            "markdown": "Containers Should Run as a High UID to Avoid Host Conflict"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "integrations/argocd/examples/presynchook.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan-hook-",
                  "kind": "kubernetes_job"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.115",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "terrascan/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.115",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/base/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.115",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/webhook/deployment-env.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.115",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-tls/deployment-certs.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.kubernetes.IAM.115",
          "level": "warning",
          "message": {
            "markdown": "Container does not have resource limitations defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-remote-repo-scan/deployment-ssh-config.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/json-extension/pod.json"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "simple",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/pod.json"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "simple",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-with-multiple-documents/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/multibases/base/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-extension2/test_pod.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/utils/testdata/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_namespace.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/multibases/zero-violation-base/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod_skip_rules.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod-skip-rules",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/validatingwebhook/test-data/yamls/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "terrascan/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/base/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/webhook/deployment-env.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-tls/deployment-certs.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-remote-repo-scan/deployment-ssh-config.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "a-sub-chart/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "a-sub-chart",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/erroneous-deployment/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/simple-deployment/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/kustomize-test/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/kustomize-file-empty/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/no-kustomizefile/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-with-multiple-documents/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-extension2/test_pod.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_kind.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_kind.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "-1",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_namespace.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "true",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-H-0168",
          "level": "error",
          "message": {
            "markdown": "Minimize Admission of Root Containers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod_skip_rules.yaml"
                },
                "contextRegion": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment-skip-rules",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/json-extension/pod.json"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "simple",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/pod.json"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "simple",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-with-multiple-documents/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/multibases/base/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-extension2/test_pod.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/utils/testdata/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_namespace.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/multibases/zero-violation-base/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod_skip_rules.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod-skip-rules",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/validatingwebhook/test-data/yamls/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "terrascan/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/base/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/webhook/deployment-env.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-tls/deployment-certs.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-remote-repo-scan/deployment-ssh-config.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "a-sub-chart/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "a-sub-chart",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/erroneous-deployment/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/simple-deployment/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/kustomize-test/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/kustomize-file-empty/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/no-kustomizefile/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-with-multiple-documents/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-extension2/test_pod.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_kind.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_kind.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "-1",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_namespace.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "true",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod_skip_rules.yaml"
                },
                "contextRegion": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment-skip-rules",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-IA-PO-M-0140",
          "level": "warning",
          "message": {
            "markdown": "Container images with readOnlyRootFileSystem set as false mounts the container root file system with write permissions"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "integrations/argocd/examples/presynchook.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan-hook-",
                  "kind": "kubernetes_job"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/json-extension/pod.json"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "simple",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/pod.json"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "simple",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-with-multiple-documents/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/multibases/base/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-extension2/test_pod.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/utils/testdata/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_namespace.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/multibases/zero-violation-base/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod_skip_rules.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-pod-skip-rules",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/validatingwebhook/test-data/yamls/pod.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp",
                  "kind": "kubernetes_pod"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata-db/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "metadata-db",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "terrascan/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/base/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/webhook/deployment-env.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-tls/deployment-certs.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/kustomize/server-remote-repo-scan/deployment-ssh-config.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "terrascan",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "a-sub-chart/templates/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "a-sub-chart",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/erroneous-deployment/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/simple-deployment/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/kustomize-test/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/kustomize-file-empty/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kustomize/v3/testdata/no-kustomizefile/deployment.yaml"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "the-deployment",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-with-multiple-documents/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/yaml-extension2/test_pod.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_kind.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_kind.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_no_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod.yaml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment2",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_metadata_name.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "-1",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_bad_namespace.yml"
                },
                "contextRegion": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "true",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-K8-CA-PO-H-0165",
          "level": "error",
          "message": {
            "markdown": "Containers Should Not Run with AllowPrivilegeEscalation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/kubernetes/v1/testdata/file-test-data/test_pod_skip_rules.yaml"
                },
                "contextRegion": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "myapp-deployment-skip-rules",
                  "kind": "kubernetes_deployment"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_026",
          "level": "warning",
          "message": {
            "markdown": "Ensure ECR repository is encrypted at rest"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/main.tf"
                },
                "contextRegion": {
                  "startLine": 52
                }
              },
              "logicalLocations": [
                {
                  "name": "scanOnPushDisabled",
                  "kind": "aws_ecr_repository"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.VPC.Logging.Medium.0470",
          "level": "warning",
          "message": {
            "markdown": "Ensure VPC flow logging is enabled in all VPCs"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/main.tf"
                },
                "contextRegion": {
                  "startLine": 10
                }
              },
              "logicalLocations": [
                {
                  "name": "acme_root",
                  "kind": "aws_vpc"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.VPC.Logging.Medium.0470",
          "level": "warning",
          "message": {
            "markdown": "Ensure VPC flow logging is enabled in all VPCs"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/tfconfigs/config1.tf"
                },
                "contextRegion": {
                  "startLine": 5
                }
              },
              "logicalLocations": [
                {
                  "name": "vpc_playground",
                  "kind": "aws_vpc"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.VPC.Logging.Medium.0470",
          "level": "warning",
          "message": {
            "markdown": "Ensure VPC flow logging is enabled in all VPCs"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/tfconfigs/config1.tf"
                },
                "contextRegion": {
                  "startLine": 5
                }
              },
              "logicalLocations": [
                {
                  "name": "vpc_playground",
                  "kind": "aws_vpc"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-AW-IS-CD-M-1186",
          "level": "warning",
          "message": {
            "markdown": "Ensure that cloud-front has web application firewall enabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/cloudfront/main.tf"
                },
                "contextRegion": {
                  "startLine": 6
                }
              },
              "logicalLocations": [
                {
                  "name": "s3-distribution-TLS-v1",
                  "kind": "aws_cloudfront_distribution"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-AW-IS-CD-M-1186",
          "level": "warning",
          "message": {
            "markdown": "Ensure that cloud-front has web application firewall enabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/moduleconfigs/cloudfront/main.tf"
                },
                "contextRegion": {
                  "startLine": 6
                }
              },
              "logicalLocations": [
                {
                  "name": "s3-distribution-TLS-v1",
                  "kind": "aws_cloudfront_distribution"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-AW-CA-LC-H-0439",
          "level": "error",
          "message": {
            "markdown": "Launch configuration uses IMDSv1 which vulnerable to SSRF"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "../../../../../../var/folders/rw/g6sdyjd14rbdl9x8w2t4v2f80000gn/T/b1tnuy/workers.tf"
                },
                "contextRegion": {
                  "startLine": 198
                }
              },
              "logicalLocations": [
                {
                  "name": "workers",
                  "kind": "aws_launch_configuration"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.SQS.NetworkSecurity.High.0569",
          "level": "error",
          "message": {
            "markdown": "Identify any publicly accessible SQS queues available in your AWS account and update their permissions in order to protect against unauthorized users."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/sqs/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "sqsQueueExposed",
                  "kind": "aws_sqs_queue"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.SQS.NetworkSecurity.High.0569",
          "level": "error",
          "message": {
            "markdown": "Identify any publicly accessible SQS queues available in your AWS account and update their permissions in order to protect against unauthorized users."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/moduleconfigs/sqs/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "sqsQueueExposed",
                  "kind": "aws_sqs_queue"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.CloudFront.EncryptionandKeyManagement.High.0407",
          "level": "error",
          "message": {
            "markdown": "Use encrypted connection between CloudFront and origin server"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/cloudfront/main.tf"
                },
                "contextRegion": {
                  "startLine": 6
                }
              },
              "logicalLocations": [
                {
                  "name": "s3-distribution-TLS-v1",
                  "kind": "aws_cloudfront_distribution"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.CloudFront.EncryptionandKeyManagement.High.0407",
          "level": "error",
          "message": {
            "markdown": "Use encrypted connection between CloudFront and origin server"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/moduleconfigs/cloudfront/main.tf"
                },
                "contextRegion": {
                  "startLine": 6
                }
              },
              "logicalLocations": [
                {
                  "name": "s3-distribution-TLS-v1",
                  "kind": "aws_cloudfront_distribution"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.CloudFront.EncryptionandKeyManagement.High.0407",
          "level": "error",
          "message": {
            "markdown": "Use encrypted connection between CloudFront and origin server"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/cloudfront/main.tf"
                },
                "contextRegion": {
                  "startLine": 6
                }
              },
              "logicalLocations": [
                {
                  "name": "s3-distribution-TLS-v1",
                  "kind": "aws_cloudfront_distribution"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.CloudFront.EncryptionandKeyManagement.High.0407",
          "level": "error",
          "message": {
            "markdown": "Use encrypted connection between CloudFront and origin server"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/moduleconfigs/cloudfront/main.tf"
                },
                "contextRegion": {
                  "startLine": 6
                }
              },
              "logicalLocations": [
                {
                  "name": "s3-distribution-TLS-v1",
                  "kind": "aws_cloudfront_distribution"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.EcsCluster.NetworkSecurity.High.0104",
          "level": "error",
          "message": {
            "markdown": "Like any other EC2 instance it is recommended to place ECS instance within a VPC. AWS VPCs provides the controls to facilitate a formal process for approving and testing all network connections and changes to the firewall and router configurations"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/ecs/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "instanceNotInVpc",
                  "kind": "aws_ecs_task_definition"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.EcsCluster.NetworkSecurity.High.0104",
          "level": "error",
          "message": {
            "markdown": "Like any other EC2 instance it is recommended to place ECS instance within a VPC. AWS VPCs provides the controls to facilitate a formal process for approving and testing all network connections and changes to the firewall and router configurations"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/moduleconfigs/ecs/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "instanceNotInVpc",
                  "kind": "aws_ecs_task_definition"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.EC2.Encryption\u0026KeyManagement.Medium.0688",
          "level": "warning",
          "message": {
            "markdown": "Enable AWS AMI Encryption"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/aws/aws_ami_violation/main.tf"
                },
                "contextRegion": {
                  "startLine": 5
                }
              },
              "logicalLocations": [
                {
                  "name": "awsAmiEncrypted",
                  "kind": "aws_ami"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.EC2.Encryption\u0026KeyManagement.Medium.0688",
          "level": "warning",
          "message": {
            "markdown": "Enable AWS AMI Encryption"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/terraform_recursive/subFolder1/subFolder2/main.tf"
                },
                "contextRegion": {
                  "startLine": 5
                }
              },
              "logicalLocations": [
                {
                  "name": "awsAmiEncrypted",
                  "kind": "aws_ami"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.ALB.NetworkPortsSecurity.High.0194",
          "level": "error",
          "message": {
            "markdown": "'SSH' (TCP:22) is accessible by a CIDR block range"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/web.tf"
                },
                "contextRegion": {
                  "startLine": 4
                }
              },
              "logicalLocations": [
                {
                  "name": "acme_web",
                  "kind": "aws_security_group"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.ALB.NetworkPortsSecurity.High.0194",
          "level": "error",
          "message": {
            "markdown": "'SSH' (TCP:22) is accessible by a CIDR block range"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/sg/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "acme_web",
                  "kind": "aws_security_group"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.ALB.NetworkPortsSecurity.High.0194",
          "level": "error",
          "message": {
            "markdown": "'SSH' (TCP:22) is accessible by a CIDR block range"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/moduleconfigs/sg/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "acme_web",
                  "kind": "aws_security_group"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_076",
          "level": "warning",
          "message": {
            "markdown": "Ensure AWS RDS instances have logging enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/aws/aws_db_instance_violation/main.tf"
                },
                "contextRegion": {
                  "startLine": 82
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi6",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_076",
          "level": "warning",
          "message": {
            "markdown": "Ensure AWS RDS instances have logging enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/resource_skipping/terraform/main.tf"
                },
                "contextRegion": {
                  "startLine": 85
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi6",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_076",
          "level": "warning",
          "message": {
            "markdown": "Ensure AWS RDS instances have logging enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/aws/aws_db_instance_violation/main.tf"
                },
                "contextRegion": {
                  "startLine": 95
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi7",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_076",
          "level": "warning",
          "message": {
            "markdown": "Ensure AWS RDS instances have logging enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/resource_skipping/terraform/main.tf"
                },
                "contextRegion": {
                  "startLine": 98
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi7",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_076",
          "level": "warning",
          "message": {
            "markdown": "Ensure AWS RDS instances have logging enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/aws/aws_db_instance_violation/main.tf"
                },
                "contextRegion": {
                  "startLine": 115
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi8",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_076",
          "level": "warning",
          "message": {
            "markdown": "Ensure AWS RDS instances have logging enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/resource_skipping/terraform/main.tf"
                },
                "contextRegion": {
                  "startLine": 118
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi8",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_076",
          "level": "warning",
          "message": {
            "markdown": "Ensure AWS RDS instances have logging enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/aws/aws_db_instance_violation/main.tf"
                },
                "contextRegion": {
                  "startLine": 134
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi9",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_076",
          "level": "warning",
          "message": {
            "markdown": "Ensure AWS RDS instances have logging enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/resource_skipping/terraform/main.tf"
                },
                "contextRegion": {
                  "startLine": 137
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi9",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_076",
          "level": "warning",
          "message": {
            "markdown": "Ensure AWS RDS instances have logging enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/aws/aws_db_instance_violation/main.tf"
                },
                "contextRegion": {
                  "startLine": 10
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi1",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_076",
          "level": "warning",
          "message": {
            "markdown": "Ensure AWS RDS instances have logging enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/resource_skipping/terraform/main.tf"
                },
                "contextRegion": {
                  "startLine": 10
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi1",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_076",
          "level": "warning",
          "message": {
            "markdown": "Ensure AWS RDS instances have logging enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/aws/aws_db_instance_violation/main.tf"
                },
                "contextRegion": {
                  "startLine": 55
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi4",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_076",
          "level": "warning",
          "message": {
            "markdown": "Ensure AWS RDS instances have logging enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/resource_skipping/terraform/main.tf"
                },
                "contextRegion": {
                  "startLine": 55
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi4",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_076",
          "level": "warning",
          "message": {
            "markdown": "Ensure AWS RDS instances have logging enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/aws/aws_db_instance_violation/main.tf"
                },
                "contextRegion": {
                  "startLine": 39
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi3",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_076",
          "level": "warning",
          "message": {
            "markdown": "Ensure AWS RDS instances have logging enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/resource_skipping/terraform/main.tf"
                },
                "contextRegion": {
                  "startLine": 39
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi3",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_076",
          "level": "warning",
          "message": {
            "markdown": "Ensure AWS RDS instances have logging enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/aws/aws_db_instance_violation/main.tf"
                },
                "contextRegion": {
                  "startLine": 69
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi5",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_076",
          "level": "warning",
          "message": {
            "markdown": "Ensure AWS RDS instances have logging enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/resource_skipping/terraform/main.tf"
                },
                "contextRegion": {
                  "startLine": 71
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi5",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_076",
          "level": "warning",
          "message": {
            "markdown": "Ensure AWS RDS instances have logging enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/aws/aws_db_instance_violation/main.tf"
                },
                "contextRegion": {
                  "startLine": 25
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi2",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_076",
          "level": "warning",
          "message": {
            "markdown": "Ensure AWS RDS instances have logging enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/resource_skipping/terraform/main.tf"
                },
                "contextRegion": {
                  "startLine": 25
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi2",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_076",
          "level": "warning",
          "message": {
            "markdown": "Ensure AWS RDS instances have logging enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "../../../../../../var/folders/rw/g6sdyjd14rbdl9x8w2t4v2f80000gn/T/ta7j7z/modules/db_instance/main.tf"
                },
                "contextRegion": {
                  "startLine": 39
                }
              },
              "logicalLocations": [
                {
                  "name": "this",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_076",
          "level": "warning",
          "message": {
            "markdown": "Ensure AWS RDS instances have logging enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "../../../../../../var/folders/rw/g6sdyjd14rbdl9x8w2t4v2f80000gn/T/ta7j7z/modules/db_instance/main.tf"
                },
                "contextRegion": {
                  "startLine": 115
                }
              },
              "logicalLocations": [
                {
                  "name": "this_mssql",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.GuardDuty Enabled.Security.Medium.0575",
          "level": "warning",
          "message": {
            "markdown": "Ensure that Amazon GuardDuty service is currently enabled in all regions in order to protect your AWS environment and infrastructure (AWS accounts and resources, IAM credentials, guest operating systems, applications, etc) against security threats. AWS GuardDuty is a managed threat detection service that continuously monitors your VPC flow logs, AWS CloudTrail event logs and DNS logs for malicious or unauthorized behavior. The service monitors for activity such as unusual API calls, potentially compromised EC2 instances or potentially unauthorized deployments that indicate a possible AWS account compromise. AWS GuardDuty operates entirely on Amazon Web Services infrastructure and does not affect the performance or reliability of your applications. The service does not require any software agents, sensors or network appliances."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/guardduty/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "gaurdDutyDisabled",
                  "kind": "aws_guardduty_detector"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.GuardDuty Enabled.Security.Medium.0575",
          "level": "warning",
          "message": {
            "markdown": "Ensure that Amazon GuardDuty service is currently enabled in all regions in order to protect your AWS environment and infrastructure (AWS accounts and resources, IAM credentials, guest operating systems, applications, etc) against security threats. AWS GuardDuty is a managed threat detection service that continuously monitors your VPC flow logs, AWS CloudTrail event logs and DNS logs for malicious or unauthorized behavior. The service monitors for activity such as unusual API calls, potentially compromised EC2 instances or potentially unauthorized deployments that indicate a possible AWS account compromise. AWS GuardDuty operates entirely on Amazon Web Services infrastructure and does not affect the performance or reliability of your applications. The service does not require any software agents, sensors or network appliances."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/moduleconfigs/guardduty/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "gaurdDutyDisabled",
                  "kind": "aws_guardduty_detector"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.CloudFront.Logging.Medium.0567",
          "level": "warning",
          "message": {
            "markdown": "Ensure that your AWS Cloudfront distributions have the Logging feature enabled in order to track all viewer requests for the content delivered through the Content Delivery Network (CDN)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/cloudfront/main.tf"
                },
                "contextRegion": {
                  "startLine": 6
                }
              },
              "logicalLocations": [
                {
                  "name": "s3-distribution-TLS-v1",
                  "kind": "aws_cloudfront_distribution"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.CloudFront.Logging.Medium.0567",
          "level": "warning",
          "message": {
            "markdown": "Ensure that your AWS Cloudfront distributions have the Logging feature enabled in order to track all viewer requests for the content delivered through the Content Delivery Network (CDN)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/moduleconfigs/cloudfront/main.tf"
                },
                "contextRegion": {
                  "startLine": 6
                }
              },
              "logicalLocations": [
                {
                  "name": "s3-distribution-TLS-v1",
                  "kind": "aws_cloudfront_distribution"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.CloudTrail.Logging.High.0399",
          "level": "error",
          "message": {
            "markdown": "Ensure CloudTrail logs are encrypted using KMS"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/cloudtrail/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "missing-multi-region",
                  "kind": "aws_cloudtrail"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.CloudTrail.Logging.High.0399",
          "level": "error",
          "message": {
            "markdown": "Ensure CloudTrail logs are encrypted using KMS"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/moduleconfigs/cloudtrail/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "missing-multi-region",
                  "kind": "aws_cloudtrail"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.RDS.DataSecurity.High.0414",
          "level": "error",
          "message": {
            "markdown": "Ensure that your RDS database instances encrypt the underlying storage. Encrypted RDS instances use the industry standard AES-256 encryption algorithm to encrypt data on the server that hosts RDS DB instances. After data is encrypted, RDS handles authentication of access and descryption of data transparently with minimal impact on performance."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "../../../../../../var/folders/rw/g6sdyjd14rbdl9x8w2t4v2f80000gn/T/ta7j7z/modules/db_instance/main.tf"
                },
                "contextRegion": {
                  "startLine": 39
                }
              },
              "logicalLocations": [
                {
                  "name": "this",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.RDS.DataSecurity.High.0414",
          "level": "error",
          "message": {
            "markdown": "Ensure that your RDS database instances encrypt the underlying storage. Encrypted RDS instances use the industry standard AES-256 encryption algorithm to encrypt data on the server that hosts RDS DB instances. After data is encrypted, RDS handles authentication of access and descryption of data transparently with minimal impact on performance."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "../../../../../../var/folders/rw/g6sdyjd14rbdl9x8w2t4v2f80000gn/T/ta7j7z/modules/db_instance/main.tf"
                },
                "contextRegion": {
                  "startLine": 115
                }
              },
              "logicalLocations": [
                {
                  "name": "this_mssql",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.RDS.DataSecurity.High.0414",
          "level": "error",
          "message": {
            "markdown": "Ensure that your RDS database instances encrypt the underlying storage. Encrypted RDS instances use the industry standard AES-256 encryption algorithm to encrypt data on the server that hosts RDS DB instances. After data is encrypted, RDS handles authentication of access and descryption of data transparently with minimal impact on performance."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/aws/aws_db_instance_violation/main.tf"
                },
                "contextRegion": {
                  "startLine": 82
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi6",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.RDS.DataSecurity.High.0414",
          "level": "error",
          "message": {
            "markdown": "Ensure that your RDS database instances encrypt the underlying storage. Encrypted RDS instances use the industry standard AES-256 encryption algorithm to encrypt data on the server that hosts RDS DB instances. After data is encrypted, RDS handles authentication of access and descryption of data transparently with minimal impact on performance."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/resource_skipping/terraform/main.tf"
                },
                "contextRegion": {
                  "startLine": 85
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi6",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.RDS.DataSecurity.High.0414",
          "level": "error",
          "message": {
            "markdown": "Ensure that your RDS database instances encrypt the underlying storage. Encrypted RDS instances use the industry standard AES-256 encryption algorithm to encrypt data on the server that hosts RDS DB instances. After data is encrypted, RDS handles authentication of access and descryption of data transparently with minimal impact on performance."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/aws/aws_db_instance_violation/main.tf"
                },
                "contextRegion": {
                  "startLine": 10
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi1",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.RDS.DataSecurity.High.0414",
          "level": "error",
          "message": {
            "markdown": "Ensure that your RDS database instances encrypt the underlying storage. Encrypted RDS instances use the industry standard AES-256 encryption algorithm to encrypt data on the server that hosts RDS DB instances. After data is encrypted, RDS handles authentication of access and descryption of data transparently with minimal impact on performance."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/resource_skipping/terraform/main.tf"
                },
                "contextRegion": {
                  "startLine": 10
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi1",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.RDS.DataSecurity.High.0414",
          "level": "error",
          "message": {
            "markdown": "Ensure that your RDS database instances encrypt the underlying storage. Encrypted RDS instances use the industry standard AES-256 encryption algorithm to encrypt data on the server that hosts RDS DB instances. After data is encrypted, RDS handles authentication of access and descryption of data transparently with minimal impact on performance."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/aws/aws_db_instance_violation/main.tf"
                },
                "contextRegion": {
                  "startLine": 55
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi4",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.RDS.DataSecurity.High.0414",
          "level": "error",
          "message": {
            "markdown": "Ensure that your RDS database instances encrypt the underlying storage. Encrypted RDS instances use the industry standard AES-256 encryption algorithm to encrypt data on the server that hosts RDS DB instances. After data is encrypted, RDS handles authentication of access and descryption of data transparently with minimal impact on performance."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/aws/aws_db_instance_violation/main.tf"
                },
                "contextRegion": {
                  "startLine": 39
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi3",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.RDS.DataSecurity.High.0414",
          "level": "error",
          "message": {
            "markdown": "Ensure that your RDS database instances encrypt the underlying storage. Encrypted RDS instances use the industry standard AES-256 encryption algorithm to encrypt data on the server that hosts RDS DB instances. After data is encrypted, RDS handles authentication of access and descryption of data transparently with minimal impact on performance."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/resource_skipping/terraform/main.tf"
                },
                "contextRegion": {
                  "startLine": 39
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi3",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.RDS.DataSecurity.High.0414",
          "level": "error",
          "message": {
            "markdown": "Ensure that your RDS database instances encrypt the underlying storage. Encrypted RDS instances use the industry standard AES-256 encryption algorithm to encrypt data on the server that hosts RDS DB instances. After data is encrypted, RDS handles authentication of access and descryption of data transparently with minimal impact on performance."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/aws/aws_db_instance_violation/main.tf"
                },
                "contextRegion": {
                  "startLine": 69
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi5",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.RDS.DataSecurity.High.0414",
          "level": "error",
          "message": {
            "markdown": "Ensure that your RDS database instances encrypt the underlying storage. Encrypted RDS instances use the industry standard AES-256 encryption algorithm to encrypt data on the server that hosts RDS DB instances. After data is encrypted, RDS handles authentication of access and descryption of data transparently with minimal impact on performance."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/resource_skipping/terraform/main.tf"
                },
                "contextRegion": {
                  "startLine": 71
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi5",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.RDS.DataSecurity.High.0414",
          "level": "error",
          "message": {
            "markdown": "Ensure that your RDS database instances encrypt the underlying storage. Encrypted RDS instances use the industry standard AES-256 encryption algorithm to encrypt data on the server that hosts RDS DB instances. After data is encrypted, RDS handles authentication of access and descryption of data transparently with minimal impact on performance."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/aws/aws_db_instance_violation/main.tf"
                },
                "contextRegion": {
                  "startLine": 25
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi2",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.RDS.DataSecurity.High.0414",
          "level": "error",
          "message": {
            "markdown": "Ensure that your RDS database instances encrypt the underlying storage. Encrypted RDS instances use the industry standard AES-256 encryption algorithm to encrypt data on the server that hosts RDS DB instances. After data is encrypted, RDS handles authentication of access and descryption of data transparently with minimal impact on performance."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/resource_skipping/terraform/main.tf"
                },
                "contextRegion": {
                  "startLine": 25
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi2",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.RDS.DataSecurity.High.0577",
          "level": "error",
          "message": {
            "markdown": "Ensure that your RDS database has IAM Authentication enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "../../../../../../var/folders/rw/g6sdyjd14rbdl9x8w2t4v2f80000gn/T/ta7j7z/modules/db_instance/main.tf"
                },
                "contextRegion": {
                  "startLine": 39
                }
              },
              "logicalLocations": [
                {
                  "name": "this",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.RDS.DataSecurity.High.0577",
          "level": "error",
          "message": {
            "markdown": "Ensure that your RDS database has IAM Authentication enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "../../../../../../var/folders/rw/g6sdyjd14rbdl9x8w2t4v2f80000gn/T/ta7j7z/modules/db_instance/main.tf"
                },
                "contextRegion": {
                  "startLine": 115
                }
              },
              "logicalLocations": [
                {
                  "name": "this_mssql",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.RDS.DataSecurity.High.0577",
          "level": "error",
          "message": {
            "markdown": "Ensure that your RDS database has IAM Authentication enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/aws/aws_db_instance_violation/main.tf"
                },
                "contextRegion": {
                  "startLine": 82
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi6",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.RDS.DataSecurity.High.0577",
          "level": "error",
          "message": {
            "markdown": "Ensure that your RDS database has IAM Authentication enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/resource_skipping/terraform/main.tf"
                },
                "contextRegion": {
                  "startLine": 85
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi6",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.RDS.DataSecurity.High.0577",
          "level": "error",
          "message": {
            "markdown": "Ensure that your RDS database has IAM Authentication enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/aws/aws_db_instance_violation/main.tf"
                },
                "contextRegion": {
                  "startLine": 55
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi4",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.RDS.DataSecurity.High.0577",
          "level": "error",
          "message": {
            "markdown": "Ensure that your RDS database has IAM Authentication enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/aws/aws_db_instance_violation/main.tf"
                },
                "contextRegion": {
                  "startLine": 39
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi3",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.RDS.DataSecurity.High.0577",
          "level": "error",
          "message": {
            "markdown": "Ensure that your RDS database has IAM Authentication enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/resource_skipping/terraform/main.tf"
                },
                "contextRegion": {
                  "startLine": 39
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi3",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.RDS.DataSecurity.High.0577",
          "level": "error",
          "message": {
            "markdown": "Ensure that your RDS database has IAM Authentication enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/aws/aws_db_instance_violation/main.tf"
                },
                "contextRegion": {
                  "startLine": 69
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi5",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.RDS.DataSecurity.High.0577",
          "level": "error",
          "message": {
            "markdown": "Ensure that your RDS database has IAM Authentication enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/aws/aws_db_instance_violation/main.tf"
                },
                "contextRegion": {
                  "startLine": 25
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi2",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.RDS.DataSecurity.High.0577",
          "level": "error",
          "message": {
            "markdown": "Ensure that your RDS database has IAM Authentication enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/resource_skipping/terraform/main.tf"
                },
                "contextRegion": {
                  "startLine": 25
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi2",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.RDS.DataSecurity.High.0577",
          "level": "error",
          "message": {
            "markdown": "Ensure that your RDS database has IAM Authentication enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "../../../../../../var/folders/rw/g6sdyjd14rbdl9x8w2t4v2f80000gn/T/ta7j7z/modules/db_instance/main.tf"
                },
                "contextRegion": {
                  "startLine": 39
                }
              },
              "logicalLocations": [
                {
                  "name": "this",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.RDS.DataSecurity.High.0577",
          "level": "error",
          "message": {
            "markdown": "Ensure that your RDS database has IAM Authentication enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "../../../../../../var/folders/rw/g6sdyjd14rbdl9x8w2t4v2f80000gn/T/ta7j7z/modules/db_instance/main.tf"
                },
                "contextRegion": {
                  "startLine": 115
                }
              },
              "logicalLocations": [
                {
                  "name": "this_mssql",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.RDS.DataSecurity.High.0577",
          "level": "error",
          "message": {
            "markdown": "Ensure that your RDS database has IAM Authentication enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/aws/aws_db_instance_violation/main.tf"
                },
                "contextRegion": {
                  "startLine": 39
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi3",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.RDS.DataSecurity.High.0577",
          "level": "error",
          "message": {
            "markdown": "Ensure that your RDS database has IAM Authentication enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/resource_skipping/terraform/main.tf"
                },
                "contextRegion": {
                  "startLine": 39
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi3",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.ElastiCache.DataSecurity.High.0424",
          "level": "error",
          "message": {
            "markdown": "ElastiCache for Memcached is not in use in AWS PCI DSS environments"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/relative-moduleconfigs/elasticcache/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "noMemcachedInElastiCache",
                  "kind": "aws_elasticache_cluster"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.ElastiCache.DataSecurity.High.0424",
          "level": "error",
          "message": {
            "markdown": "ElastiCache for Memcached is not in use in AWS PCI DSS environments"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/relative-moduleconfigs/elasticcache/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "noMemcachedInElastiCache",
                  "kind": "aws_elasticache_cluster"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.SecurityGroup.NetworkPortsSecurity.Low.0560",
          "level": "error",
          "message": {
            "markdown": "ssh port open to internet"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/web.tf"
                },
                "contextRegion": {
                  "startLine": 4
                }
              },
              "logicalLocations": [
                {
                  "name": "acme_web",
                  "kind": "aws_security_group"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.SecurityGroup.NetworkPortsSecurity.Low.0560",
          "level": "error",
          "message": {
            "markdown": "ssh port open to internet"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/sg/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "acme_web",
                  "kind": "aws_security_group"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.SecurityGroup.NetworkPortsSecurity.Low.0560",
          "level": "error",
          "message": {
            "markdown": "ssh port open to internet"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/moduleconfigs/sg/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "acme_web",
                  "kind": "aws_security_group"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.SecurityGroup.NetworkPortsSecurity.Low.0560",
          "level": "error",
          "message": {
            "markdown": "ssh port open to internet"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/web.tf"
                },
                "contextRegion": {
                  "startLine": 4
                }
              },
              "logicalLocations": [
                {
                  "name": "acme_web",
                  "kind": "aws_security_group"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.SecurityGroup.NetworkPortsSecurity.Low.0560",
          "level": "error",
          "message": {
            "markdown": "ssh port open to internet"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/sg/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "acme_web",
                  "kind": "aws_security_group"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.SecurityGroup.NetworkPortsSecurity.Low.0560",
          "level": "error",
          "message": {
            "markdown": "ssh port open to internet"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/moduleconfigs/sg/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "acme_web",
                  "kind": "aws_security_group"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.SecurityGroup.NetworkPortsSecurity.Low.0560",
          "level": "error",
          "message": {
            "markdown": "ssh port open to internet"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/tfconfigs/config1.tf"
                },
                "contextRegion": {
                  "startLine": 46
                }
              },
              "logicalLocations": [
                {
                  "name": "sg_playground",
                  "kind": "aws_security_group"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.SecurityGroup.NetworkPortsSecurity.Low.0560",
          "level": "error",
          "message": {
            "markdown": "ssh port open to internet"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/tfconfigs/config1.tf"
                },
                "contextRegion": {
                  "startLine": 46
                }
              },
              "logicalLocations": [
                {
                  "name": "sg_playground",
                  "kind": "aws_security_group"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_012",
          "level": "warning",
          "message": {
            "markdown": "Ensure rotation for customer created CMKs is enabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/cloudfront/sub-cloudfront/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "kmsKeyDisabled",
                  "kind": "aws_kms_key"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_012",
          "level": "warning",
          "message": {
            "markdown": "Ensure rotation for customer created CMKs is enabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/moduleconfigs/cloudfront/sub-cloudfront/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "kmsKeyDisabled",
                  "kind": "aws_kms_key"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_012",
          "level": "warning",
          "message": {
            "markdown": "Ensure rotation for customer created CMKs is enabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/aws/aws_db_instance_violation/main.tf"
                },
                "contextRegion": {
                  "startLine": 5
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAkk1",
                  "kind": "aws_kms_key"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_012",
          "level": "warning",
          "message": {
            "markdown": "Ensure rotation for customer created CMKs is enabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/resource_skipping/terraform/main.tf"
                },
                "contextRegion": {
                  "startLine": 5
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAkk1",
                  "kind": "aws_kms_key"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-AW-IS-IN-M-0144",
          "level": "warning",
          "message": {
            "markdown": "Ensure that your AWS application is not deployed within the default Virtual Private Cloud in order to follow security best practices"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/count/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "server",
                  "kind": "aws_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.S3Bucket.IAM.High.0370",
          "level": "error",
          "message": {
            "markdown": "Enabling S3 versioning will enable easy recovery from both unintended user actions, like deletes and overwrites"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/deep-modules/modules/m1/main.tf"
                },
                "contextRegion": {
                  "startLine": 20
                }
              },
              "logicalLocations": [
                {
                  "name": "bucket",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.S3Bucket.IAM.High.0370",
          "level": "error",
          "message": {
            "markdown": "Enabling S3 versioning will enable easy recovery from both unintended user actions, like deletes and overwrites"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/deep-modules/modules/m4/main.tf"
                },
                "contextRegion": {
                  "startLine": 11
                }
              },
              "logicalLocations": [
                {
                  "name": "bucket",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.S3Bucket.IAM.High.0370",
          "level": "error",
          "message": {
            "markdown": "Enabling S3 versioning will enable easy recovery from both unintended user actions, like deletes and overwrites"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/deep-modules/modules/m4/main.tf"
                },
                "contextRegion": {
                  "startLine": 11
                }
              },
              "logicalLocations": [
                {
                  "name": "bucket",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.S3Bucket.IAM.High.0370",
          "level": "error",
          "message": {
            "markdown": "Enabling S3 versioning will enable easy recovery from both unintended user actions, like deletes and overwrites"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/deep-modules/modules/m1/main.tf"
                },
                "contextRegion": {
                  "startLine": 20
                }
              },
              "logicalLocations": [
                {
                  "name": "bucket",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.S3Bucket.IAM.High.0370",
          "level": "error",
          "message": {
            "markdown": "Enabling S3 versioning will enable easy recovery from both unintended user actions, like deletes and overwrites"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/deep-modules/modules/m4/main.tf"
                },
                "contextRegion": {
                  "startLine": 11
                }
              },
              "logicalLocations": [
                {
                  "name": "bucket",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.S3Bucket.IAM.High.0370",
          "level": "error",
          "message": {
            "markdown": "Enabling S3 versioning will enable easy recovery from both unintended user actions, like deletes and overwrites"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/deep-modules/modules/m4/main.tf"
                },
                "contextRegion": {
                  "startLine": 11
                }
              },
              "logicalLocations": [
                {
                  "name": "bucket",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.S3Bucket.IAM.High.0370",
          "level": "error",
          "message": {
            "markdown": "Enabling S3 versioning will enable easy recovery from both unintended user actions, like deletes and overwrites"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/deep-modules/modules/m4/modules/m4a/main.tf"
                },
                "contextRegion": {
                  "startLine": 20
                }
              },
              "logicalLocations": [
                {
                  "name": "bucket4a",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.S3Bucket.IAM.High.0370",
          "level": "error",
          "message": {
            "markdown": "Enabling S3 versioning will enable easy recovery from both unintended user actions, like deletes and overwrites"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/deep-modules/modules/m4/modules/m4a/main.tf"
                },
                "contextRegion": {
                  "startLine": 20
                }
              },
              "logicalLocations": [
                {
                  "name": "bucket4a",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.S3Bucket.IAM.High.0370",
          "level": "error",
          "message": {
            "markdown": "Enabling S3 versioning will enable easy recovery from both unintended user actions, like deletes and overwrites"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/s3/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "noS3BucketSseRules",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.S3Bucket.IAM.High.0370",
          "level": "error",
          "message": {
            "markdown": "Enabling S3 versioning will enable easy recovery from both unintended user actions, like deletes and overwrites"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/moduleconfigs/s3/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "noS3BucketSseRules",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.S3Bucket.IAM.High.0370",
          "level": "error",
          "message": {
            "markdown": "Enabling S3 versioning will enable easy recovery from both unintended user actions, like deletes and overwrites"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/for_each/main.tf"
                },
                "contextRegion": {
                  "startLine": 18
                }
              },
              "logicalLocations": [
                {
                  "name": "example",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.ELB.EncryptionandKeyManagement.High.0403",
          "level": "error",
          "message": {
            "markdown": "Remove insecure ciphers for your ELB Predefined or Custom Security Policy, to reduce the risk of the SSL connection between the client and the load balancer being exploited."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/elb/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "elbWeakCipher",
                  "kind": "aws_load_balancer_policy"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.ELB.EncryptionandKeyManagement.High.0403",
          "level": "error",
          "message": {
            "markdown": "Remove insecure ciphers for your ELB Predefined or Custom Security Policy, to reduce the risk of the SSL connection between the client and the load balancer being exploited."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/moduleconfigs/elb/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "elbWeakCipher",
                  "kind": "aws_load_balancer_policy"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.RDS.NS.High.0101",
          "level": "error",
          "message": {
            "markdown": "RDS Instance publicly_accessible flag is true"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/aws/aws_db_instance_violation/main.tf"
                },
                "contextRegion": {
                  "startLine": 39
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi3",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.RDS.NS.High.0101",
          "level": "error",
          "message": {
            "markdown": "RDS Instance publicly_accessible flag is true"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/resource_skipping/terraform/main.tf"
                },
                "contextRegion": {
                  "startLine": 39
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi3",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_071",
          "level": "warning",
          "message": {
            "markdown": "Ensure EKS clusters have control plane logging enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "../../../../../../var/folders/rw/g6sdyjd14rbdl9x8w2t4v2f80000gn/T/b1tnuy/cluster.tf"
                },
                "contextRegion": {
                  "startLine": 9
                }
              },
              "logicalLocations": [
                {
                  "name": "this",
                  "kind": "aws_eks_cluster"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.SecurityGroup.NetworkPortsSecurity.Low.0561",
          "level": "error",
          "message": {
            "markdown": "http port open to internet"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/web.tf"
                },
                "contextRegion": {
                  "startLine": 4
                }
              },
              "logicalLocations": [
                {
                  "name": "acme_web",
                  "kind": "aws_security_group"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.SecurityGroup.NetworkPortsSecurity.Low.0561",
          "level": "error",
          "message": {
            "markdown": "http port open to internet"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/sg/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "acme_web",
                  "kind": "aws_security_group"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.SecurityGroup.NetworkPortsSecurity.Low.0561",
          "level": "error",
          "message": {
            "markdown": "http port open to internet"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/moduleconfigs/sg/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "acme_web",
                  "kind": "aws_security_group"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.SecurityGroup.NetworkPortsSecurity.Low.0561",
          "level": "error",
          "message": {
            "markdown": "http port open to internet"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/tfconfigs/config1.tf"
                },
                "contextRegion": {
                  "startLine": 46
                }
              },
              "logicalLocations": [
                {
                  "name": "sg_playground",
                  "kind": "aws_security_group"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.SecurityGroup.NetworkPortsSecurity.Low.0561",
          "level": "error",
          "message": {
            "markdown": "http port open to internet"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/tfconfigs/config1.tf"
                },
                "contextRegion": {
                  "startLine": 46
                }
              },
              "logicalLocations": [
                {
                  "name": "sg_playground",
                  "kind": "aws_security_group"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.ECR.DataSecurity.High.0579",
          "level": "error",
          "message": {
            "markdown": "Identify any exposed Amazon ECR image repositories available within your AWS account and update their permissions in order to protect against unauthorized access. Amazon Elastic Container Registry (ECR) is a managed Docker registry service that makes it easy for DevOps teams to store, manage and deploy Docker container images. An ECR repository is a collection of Docker images available on AWS cloud."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/main.tf"
                },
                "contextRegion": {
                  "startLine": 60
                }
              },
              "logicalLocations": [
                {
                  "name": "ecrRepoIsPublic",
                  "kind": "aws_ecr_repository_policy"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.S3Bucket.EncryptionandKeyManagement.High.0405",
          "level": "error",
          "message": {
            "markdown": "Ensure that S3 Buckets have server side encryption at rest enabled with KMS key to protect sensitive data."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/deep-modules/modules/m1/main.tf"
                },
                "contextRegion": {
                  "startLine": 20
                }
              },
              "logicalLocations": [
                {
                  "name": "bucket",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.S3Bucket.EncryptionandKeyManagement.High.0405",
          "level": "error",
          "message": {
            "markdown": "Ensure that S3 Buckets have server side encryption at rest enabled with KMS key to protect sensitive data."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/deep-modules/modules/m4/main.tf"
                },
                "contextRegion": {
                  "startLine": 11
                }
              },
              "logicalLocations": [
                {
                  "name": "bucket",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.S3Bucket.EncryptionandKeyManagement.High.0405",
          "level": "error",
          "message": {
            "markdown": "Ensure that S3 Buckets have server side encryption at rest enabled with KMS key to protect sensitive data."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/deep-modules/modules/m4/main.tf"
                },
                "contextRegion": {
                  "startLine": 11
                }
              },
              "logicalLocations": [
                {
                  "name": "bucket",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.S3Bucket.EncryptionandKeyManagement.High.0405",
          "level": "error",
          "message": {
            "markdown": "Ensure that S3 Buckets have server side encryption at rest enabled with KMS key to protect sensitive data."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/deep-modules/modules/m1/main.tf"
                },
                "contextRegion": {
                  "startLine": 20
                }
              },
              "logicalLocations": [
                {
                  "name": "bucket",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.S3Bucket.EncryptionandKeyManagement.High.0405",
          "level": "error",
          "message": {
            "markdown": "Ensure that S3 Buckets have server side encryption at rest enabled with KMS key to protect sensitive data."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/deep-modules/modules/m4/main.tf"
                },
                "contextRegion": {
                  "startLine": 11
                }
              },
              "logicalLocations": [
                {
                  "name": "bucket",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.S3Bucket.EncryptionandKeyManagement.High.0405",
          "level": "error",
          "message": {
            "markdown": "Ensure that S3 Buckets have server side encryption at rest enabled with KMS key to protect sensitive data."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/deep-modules/modules/m4/main.tf"
                },
                "contextRegion": {
                  "startLine": 11
                }
              },
              "logicalLocations": [
                {
                  "name": "bucket",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.S3Bucket.EncryptionandKeyManagement.High.0405",
          "level": "error",
          "message": {
            "markdown": "Ensure that S3 Buckets have server side encryption at rest enabled with KMS key to protect sensitive data."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/deep-modules/modules/m4/modules/m4a/main.tf"
                },
                "contextRegion": {
                  "startLine": 20
                }
              },
              "logicalLocations": [
                {
                  "name": "bucket4a",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.S3Bucket.EncryptionandKeyManagement.High.0405",
          "level": "error",
          "message": {
            "markdown": "Ensure that S3 Buckets have server side encryption at rest enabled with KMS key to protect sensitive data."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/deep-modules/modules/m4/modules/m4a/main.tf"
                },
                "contextRegion": {
                  "startLine": 20
                }
              },
              "logicalLocations": [
                {
                  "name": "bucket4a",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.S3Bucket.EncryptionandKeyManagement.High.0405",
          "level": "error",
          "message": {
            "markdown": "Ensure that S3 Buckets have server side encryption at rest enabled with KMS key to protect sensitive data."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/s3/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "noS3BucketSseRules",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.S3Bucket.EncryptionandKeyManagement.High.0405",
          "level": "error",
          "message": {
            "markdown": "Ensure that S3 Buckets have server side encryption at rest enabled with KMS key to protect sensitive data."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/moduleconfigs/s3/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "noS3BucketSseRules",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.S3Bucket.EncryptionandKeyManagement.High.0405",
          "level": "error",
          "message": {
            "markdown": "Ensure that S3 Buckets have server side encryption at rest enabled with KMS key to protect sensitive data."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/for_each/main.tf"
                },
                "contextRegion": {
                  "startLine": 18
                }
              },
              "logicalLocations": [
                {
                  "name": "example",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.RDS.DS.High.1041",
          "level": "error",
          "message": {
            "markdown": "RDS Instance Auto Minor Version Upgrade flag disabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/aws/aws_db_instance_violation/main.tf"
                },
                "contextRegion": {
                  "startLine": 39
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi3",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.RDS.DS.High.1041",
          "level": "error",
          "message": {
            "markdown": "RDS Instance Auto Minor Version Upgrade flag disabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/test_data/iac/resource_skipping/terraform/main.tf"
                },
                "contextRegion": {
                  "startLine": 39
                }
              },
              "logicalLocations": [
                {
                  "name": "PtShGgAdi3",
                  "kind": "aws_db_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.ECR.DataSecurity.High.0578",
          "level": "warning",
          "message": {
            "markdown": "Unscanned images may contain vulnerabilities"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/main.tf"
                },
                "contextRegion": {
                  "startLine": 52
                }
              },
              "logicalLocations": [
                {
                  "name": "scanOnPushDisabled",
                  "kind": "aws_ecr_repository"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.S3Bucket.DS.High.1043",
          "level": "error",
          "message": {
            "markdown": "S3 bucket Access is allowed to all AWS Account Users."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/s3/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "noS3BucketSseRules",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.S3Bucket.DS.High.1043",
          "level": "error",
          "message": {
            "markdown": "S3 bucket Access is allowed to all AWS Account Users."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/moduleconfigs/s3/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "noS3BucketSseRules",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AWS.S3Bucket.DS.High.1043",
          "level": "error",
          "message": {
            "markdown": "S3 bucket Access is allowed to all AWS Account Users."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/for_each/main.tf"
                },
                "contextRegion": {
                  "startLine": 18
                }
              },
              "logicalLocations": [
                {
                  "name": "example",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_078",
          "level": "warning",
          "message": {
            "markdown": "Ensure S3 buckets have access logging enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/deep-modules/modules/m1/main.tf"
                },
                "contextRegion": {
                  "startLine": 20
                }
              },
              "logicalLocations": [
                {
                  "name": "bucket",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_078",
          "level": "warning",
          "message": {
            "markdown": "Ensure S3 buckets have access logging enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/deep-modules/modules/m4/main.tf"
                },
                "contextRegion": {
                  "startLine": 11
                }
              },
              "logicalLocations": [
                {
                  "name": "bucket",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_078",
          "level": "warning",
          "message": {
            "markdown": "Ensure S3 buckets have access logging enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/deep-modules/modules/m4/main.tf"
                },
                "contextRegion": {
                  "startLine": 11
                }
              },
              "logicalLocations": [
                {
                  "name": "bucket",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_078",
          "level": "warning",
          "message": {
            "markdown": "Ensure S3 buckets have access logging enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/deep-modules/modules/m1/main.tf"
                },
                "contextRegion": {
                  "startLine": 20
                }
              },
              "logicalLocations": [
                {
                  "name": "bucket",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_078",
          "level": "warning",
          "message": {
            "markdown": "Ensure S3 buckets have access logging enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/deep-modules/modules/m4/main.tf"
                },
                "contextRegion": {
                  "startLine": 11
                }
              },
              "logicalLocations": [
                {
                  "name": "bucket",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_078",
          "level": "warning",
          "message": {
            "markdown": "Ensure S3 buckets have access logging enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/deep-modules/modules/m4/main.tf"
                },
                "contextRegion": {
                  "startLine": 11
                }
              },
              "logicalLocations": [
                {
                  "name": "bucket",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_078",
          "level": "warning",
          "message": {
            "markdown": "Ensure S3 buckets have access logging enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/deep-modules/modules/m4/modules/m4a/main.tf"
                },
                "contextRegion": {
                  "startLine": 20
                }
              },
              "logicalLocations": [
                {
                  "name": "bucket4a",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_078",
          "level": "warning",
          "message": {
            "markdown": "Ensure S3 buckets have access logging enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/deep-modules/modules/m4/modules/m4a/main.tf"
                },
                "contextRegion": {
                  "startLine": 20
                }
              },
              "logicalLocations": [
                {
                  "name": "bucket4a",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_078",
          "level": "warning",
          "message": {
            "markdown": "Ensure S3 buckets have access logging enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/s3/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "noS3BucketSseRules",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_078",
          "level": "warning",
          "message": {
            "markdown": "Ensure S3 buckets have access logging enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/moduleconfigs/s3/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "noS3BucketSseRules",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_078",
          "level": "warning",
          "message": {
            "markdown": "Ensure S3 buckets have access logging enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/for_each/main.tf"
                },
                "contextRegion": {
                  "startLine": 18
                }
              },
              "logicalLocations": [
                {
                  "name": "example",
                  "kind": "aws_s3_bucket"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_015",
          "level": "note",
          "message": {
            "markdown": "Ensure every security group should have a description to ease the process of Auditing"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/tfconfigs/config1.tf"
                },
                "contextRegion": {
                  "startLine": 46
                }
              },
              "logicalLocations": [
                {
                  "name": "sg_playground",
                  "kind": "aws_security_group"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_015",
          "level": "note",
          "message": {
            "markdown": "Ensure every security group should have a description to ease the process of Auditing"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/tfconfigs/config1.tf"
                },
                "contextRegion": {
                  "startLine": 46
                }
              },
              "logicalLocations": [
                {
                  "name": "sg_playground",
                  "kind": "aws_security_group"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-AWS-NS-IN-M-1172",
          "level": "warning",
          "message": {
            "markdown": "EC2 instances should disable IMDS or require IMDSv2 as this can be related to the weaponization phase of kill chain"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/web.tf"
                },
                "contextRegion": {
                  "startLine": 40
                }
              },
              "logicalLocations": [
                {
                  "name": "acem_web",
                  "kind": "aws_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-AWS-NS-IN-M-1172",
          "level": "warning",
          "message": {
            "markdown": "EC2 instances should disable IMDS or require IMDSv2 as this can be related to the weaponization phase of kill chain"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/list-type-vars-test/main.tf"
                },
                "contextRegion": {
                  "startLine": 5
                }
              },
              "logicalLocations": [
                {
                  "name": "app",
                  "kind": "aws_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-AWS-NS-IN-M-1172",
          "level": "warning",
          "message": {
            "markdown": "EC2 instances should disable IMDS or require IMDSv2 as this can be related to the weaponization phase of kill chain"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/tfconfigs/config1.tf"
                },
                "contextRegion": {
                  "startLine": 77
                }
              },
              "logicalLocations": [
                {
                  "name": "instance_playground",
                  "kind": "aws_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-AWS-NS-IN-M-1172",
          "level": "warning",
          "message": {
            "markdown": "EC2 instances should disable IMDS or require IMDSv2 as this can be related to the weaponization phase of kill chain"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/tfconfigs/config1.tf"
                },
                "contextRegion": {
                  "startLine": 77
                }
              },
              "logicalLocations": [
                {
                  "name": "instance_playground",
                  "kind": "aws_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC-AWS-NS-IN-M-1172",
          "level": "warning",
          "message": {
            "markdown": "EC2 instances should disable IMDS or require IMDSv2 as this can be related to the weaponization phase of kill chain"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/count/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "server",
                  "kind": "aws_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_070",
          "level": "error",
          "message": {
            "markdown": "Ensure that detailed monitoring is enabled for EC2 instances."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/cli/testdata/run-test/web.tf"
                },
                "contextRegion": {
                  "startLine": 40
                }
              },
              "logicalLocations": [
                {
                  "name": "acem_web",
                  "kind": "aws_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_070",
          "level": "error",
          "message": {
            "markdown": "Ensure that detailed monitoring is enabled for EC2 instances."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/list-type-vars-test/main.tf"
                },
                "contextRegion": {
                  "startLine": 5
                }
              },
              "logicalLocations": [
                {
                  "name": "app",
                  "kind": "aws_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_070",
          "level": "error",
          "message": {
            "markdown": "Ensure that detailed monitoring is enabled for EC2 instances."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/tfconfigs/config1.tf"
                },
                "contextRegion": {
                  "startLine": 77
                }
              },
              "logicalLocations": [
                {
                  "name": "instance_playground",
                  "kind": "aws_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_070",
          "level": "error",
          "message": {
            "markdown": "Ensure that detailed monitoring is enabled for EC2 instances."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/tfconfigs/config1.tf"
                },
                "contextRegion": {
                  "startLine": 77
                }
              },
              "logicalLocations": [
                {
                  "name": "instance_playground",
                  "kind": "aws_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_070",
          "level": "error",
          "message": {
            "markdown": "Ensure that detailed monitoring is enabled for EC2 instances."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/count/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "server",
                  "kind": "aws_instance"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_067",
          "level": "warning",
          "message": {
            "markdown": "Ensure CloudTrail has log file validation enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/cloudtrail/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "missing-multi-region",
                  "kind": "aws_cloudtrail"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "AC_AWS_067",
          "level": "warning",
          "message": {
            "markdown": "Ensure CloudTrail has log file validation enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/moduleconfigs/cloudtrail/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "missing-multi-region",
                  "kind": "aws_cloudtrail"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.azure.NS.161",
          "level": "warning",
          "message": {
            "markdown": "Ensure that Azure Virtual Network subnet is configured with a Network Security Group"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "../../../../../../var/folders/rw/g6sdyjd14rbdl9x8w2t4v2f80000gn/T/kybn6u/main.tf"
                },
                "contextRegion": {
                  "startLine": 15
                }
              },
              "logicalLocations": [
                {
                  "name": "subnet",
                  "kind": "azurerm_subnet"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "accurics.azure.NS.272",
          "level": "note",
          "message": {
            "markdown": "Ensure that Azure Resource Group has resource lock enabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pkg/iac-providers/terraform/v14/testdata/for_each/main.tf"
                },
                "contextRegion": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "name": "rg",
                  "kind": "azurerm_resource_group"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
